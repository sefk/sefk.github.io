<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>sef.kloninger.com (Tech)</title><link>http://sef.kloninger.com/</link><description></description><atom:link href="http://sef.kloninger.com/categories/tech.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 19 Aug 2015 20:23:49 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Thick Apps Still Lose</title><link>http://sef.kloninger.com/posts/thick-apps.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/online-required.png" alt="Microsoft Excel 2016 Error Message" width="60%"&gt;&lt;/p&gt;
&lt;p&gt;Thick apps won mobile. Fine. &lt;/p&gt;
&lt;p&gt;On laptop (and desktop) it's not so clear. What is better, thick or thin?
I tend to live mostly in thin land, although I use some thick apps
regularly, like Twitter's Mac client and Apple Photos.&lt;/p&gt;
&lt;p&gt;Every so often I give a big native app a try: &lt;strong&gt;Excel&lt;/strong&gt; instead of
&lt;strong&gt;Google Sheets&lt;/strong&gt;, &lt;strong&gt;Mail.app&lt;/strong&gt; instead of &lt;strong&gt;Gmail&lt;/strong&gt;, &lt;strong&gt;Reminders&lt;/strong&gt;
instead of the barebones &lt;strong&gt;Tasks&lt;/strong&gt; built into Gmail. But its disappointing
to see how those fancy apps keep shooting themselves in the foot! &lt;/p&gt;
&lt;p&gt;Take for example this Excel error message. Excel is whining that it
can't verify my subscription the first time I ran Excel untethered
(version 15.11.2, for what its worth). Sure you can click through the
warning, but would a newbie know to do that? At best off-putting, at worst
downright disorienting. Why warn me of this at all? And why in a modal
that stops me dead in my tracks?&lt;/p&gt;
&lt;p&gt;It seems thick apps should win. They rock the unplugged use case. An even
better situation is flaky networks -- tethered, conference WiFi,
travelling. UI's deal notoriously poorly with intermittent or partial
outages. A thick client, relying on that connection only for hitting
API's, can hide the network.&lt;/p&gt;
&lt;p&gt;Another place they should shine is the UI itself. They should be fast,
beautiful, and featureful. Too often they're not. For example I find
Mail.app to be clunky, difficult to customize, and its keyboard shortcuts
few and poorly done. Gmail is pretty good!&lt;/p&gt;
&lt;p&gt;Finally there's the upgrade problem. Thick apps need conscious effort from
their users before their work sees user time and they get feedback. And
that's what drives innovation. Long cycles means slower (less) invention.
One example I love is Gmail's "undo send" feature. Boy, you sure do miss
that when you need it and it's not there! That should be on every thick
client by now, but I don't think it is. I do know that Gmail has it and
Mail.app still doesn't.&lt;/p&gt;
&lt;p&gt;Maybe the Internet can help. Look at &lt;strong&gt;&lt;a href="https://www.getchrome.com/"&gt;Chrome&lt;/a&gt;&lt;/strong&gt; with its awesome auto
updates. What makes this work is solid engineering and exceptional quality
control. I've never seen behind the Google curtain, but I bet there's no
magic, just a lot of good engineering that leads to good software. Like:
good design and code reviews, tons of test coverage across many scenarios,
diverse and well-instrumented canaries, and thorough performance and
resource use testing. If Google didn't all of that so well, then we
wouldn't accept frequent pushes. Without the frequent upgrade cycle,
Chromes feature cycle would languish.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.getelectron.com/"&gt;Electron&lt;/a&gt;&lt;/strong&gt; is another bright spot. This is the framework that gives
Slack and GitHub's thick clients their fit and finish. It makes these feel
like true native apps, even though they are mostly web controls with
JavaScript the covers. Right-clicking still doesn't do what I want, and
text controls are finicky, but it's close. But what those rough edges buy
you, and the software producer, are frequent, reliable, and clean
upgrades.&lt;/p&gt;
&lt;p&gt;My natural mode is for thick apps. If done well, I'd use 'em.&lt;/p&gt;&lt;/div&gt;</description><category>Tech</category><guid>http://sef.kloninger.com/posts/thick-apps.html</guid><pubDate>Wed, 19 Aug 2015 20:20:00 GMT</pubDate></item><item><title>My Next Job</title><link>http://sef.kloninger.com/posts/job-15.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/snowflake.png" alt="Snowflake" width="25%"&gt;&lt;/p&gt;
&lt;p&gt;I left &lt;a href="http://www.wavefront.com/"&gt;my last job&lt;/a&gt; a few weeks back and it's high time to look for a new
one. If you're working on something interesting and think I could help, &lt;a href="mailto:sefklon@gmail.com"&gt;let
me know&lt;/a&gt;! &lt;/p&gt;
&lt;p&gt;It's nice to not have a day job while looking for another. I was lucky enough
to do this &lt;a href="http://sef.kloninger.com/posts/201204my-sabbatical.html"&gt;once before in 2012&lt;/a&gt; which turned out great. I learned then
that time and flexibility lets you talk to lots of friends and learn about a
breadth of projects. I found a fun project in a new domain (&lt;a href="http://sef.kloninger.com/posts/201207on-line-education.html"&gt;online
education&lt;/a&gt;), something I doubt I'd have found the normal way.&lt;/p&gt;
&lt;p&gt;Maybe I'll get lucky again.&lt;/p&gt;
&lt;p&gt;Enough small talk, what am I looking for?&lt;/p&gt;
&lt;p&gt;I'm looking for some flavor of &lt;strong&gt;line manager&lt;/strong&gt;. I'm a good senior manager and
code-every-day engineer; but I'm exceptional leading a team and running a
project. That's what line managers do: lead engineers, not other managers or
departments or matrix-anything. Also, if you're some kind of executive then
coding is an indulgence, and I'd rather it just be part of my job. Mostly I'm
talking to &lt;strong&gt;small companies&lt;/strong&gt;, say 10-100 people (fun-size).&lt;/p&gt;
&lt;p&gt;I want to &lt;strong&gt;build on my experience&lt;/strong&gt;. I know infrastructure and cloud, SaaS
and enterprise, and online education. I'm probably not the best person for
your storage, security, gaming, e-commerce, or cryptocurrency company. I want
to stay working on &lt;strong&gt;Internet technology&lt;/strong&gt;. I like the (micro)services model.
For my own projects I choose Python, JavaScript (frontend and backend), and
Java. I know web operations, especially the &lt;a href="http://sef.kloninger.com/posts/aws.html"&gt;Amazon stack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Location&lt;/strong&gt; is important: I don't want to do a daily Menlo Park to San
Francisco round-trip. I'd like to &lt;strong&gt;work with friends&lt;/strong&gt; if possible. And I
want to do something &lt;strong&gt;worthwhile&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You can always get to my resume from the header here, or via this &lt;a href="http://bit.ly/sef-resume"&gt;short
link&lt;/a&gt;. I'm open to a bunch of things, just no &lt;a href="https://www.youtube.com/watch?v=VEgu7jdc_fs"&gt;kick boxing&lt;/a&gt;.  Let's
have coffee/drink or take a walk.&lt;/p&gt;&lt;/div&gt;</description><category>Life</category><category>Tech</category><guid>http://sef.kloninger.com/posts/job-15.html</guid><pubDate>Sun, 10 May 2015 16:30:00 GMT</pubDate></item><item><title>Lessons from Three Years in AWS</title><link>http://sef.kloninger.com/posts/aws.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/aws.png" alt="AWS Logo" width="30%"&gt;&lt;/p&gt;
&lt;p&gt;I've spent the last three years building and operating web sites
with Amazon Web Services and here are a few lessons I've learned. 
But I first have to come clean that I'm a fan of AWS with only
casual experience with other IAAS/PAAS platforms.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S3 Is Amazing&lt;/strong&gt;. They made the right engineering choices and
compromises: cheap, practically infinitely scalable, fast enough,
with good availability. $0.03/GB/mo covers up for a lot of sins.
Knowing it's there changes how you build systems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IAM Machine Roles From The Start&lt;/strong&gt;. IAM with &lt;a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"&gt;Instance Metadata&lt;/a&gt;
is a powerful way to manage secrets and rights. Trouble is you can't add
to existing machines. Provision with machine roles in big categories
(e.g. app servers, utility machines, databases) at the start, even if 
just placeholders.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Availability Zoness Are Only Mostly Decoupled&lt;/strong&gt;. After the 2011
&lt;a href="http://www.networkworld.com/article/2202805/cloud-computing/amazon-ec2-outage-calls--availability-zones--into-question.html"&gt;us-east-1 outage&lt;/a&gt; we were reassured that a coordinated 
outage wouldn't happen again, but it happened again just
&lt;a href="https://www.reddit.com/r/aws/comments/2zpag7/aws_internal_dns_outage/"&gt;last month&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;They Will Lock You In And You'll Like It&lt;/strong&gt;. They secondary services
work well, are cheap, and are handy. I'm speaking of SQS, SES,
Glacier, even Elastic Transcoder. Who &lt;em&gt;wants&lt;/em&gt; to run a durable queue
again?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CloudFormation No&lt;/strong&gt;. It's tough to get right. My
objection isn't programming in YAML, I don't mind writing Ansible plays, it's the
complexity/structure of CloudFormation that is impenetrable. Plus
even if you get it working once, you'd never run it again on something
that is running.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boto Yes&lt;/strong&gt;. Powerful and expressive. Don't script the CLI, use
Boto. Easy as pie.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Qualify Machines Before Use&lt;/strong&gt;. Some VMs have lousy networking,
presumably due to a chatty same-host or same-rack neighbor. Test
for loss and latency to other hosts you own and on EBS. (I've used
home-grown scripts, don't know of a standard open-source widget,
someone should write one).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VPC Yes&lt;/strong&gt;. If you have machines talking to each other (i.e. not a
lone machine doing something lonely) then put them in a VPC. It's not
hard.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NAT No&lt;/strong&gt;. You think that'll improve security, but it will just
introduce SPOFS and capacity chokepoints. Give your machines publicly
routable IP's and use security groups.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network ACLs Are A Pain&lt;/strong&gt;. Try to get as far as you can with just security
groups.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You'll Peer VPC's Someday&lt;/strong&gt;. Choose non-overlapping subnet IP ranges
at the start. It's hard to change later.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spot Instances Are Tricky&lt;/strong&gt;. They're only For a very specific use
case that likely isn't yours. Setting up a test network? You can
spend the money you save by using spot on swear jar fees.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pick a Management Toolset&lt;/strong&gt;. Ansible, Chef, all those things aren't
&lt;em&gt;all&lt;/em&gt; that different when it comes down to it. Just don't dither back
and forth. There's a little bit of extra Chef love w/ AWS but not enough to tip
the scales in your decision I'd reckon. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tech Support Is Terrible&lt;/strong&gt;. My &lt;a href="http://www.wavefront.com/"&gt;last little
startup&lt;/a&gt; didn't get much out of the &lt;a href="https://aws.amazon.com/premiumsupport/"&gt;business level tech
support&lt;/a&gt; we bought. We needed it so we could call in to get
help when we needed it, and we used that for escalating some problems.
It was nice to have a number to call when I urgently need to up a
system limit, say. But debugging something real, like a networking
problem? Pretty rough.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;...Unless You Are Big&lt;/strong&gt;. Stanford, on the other hand, had a named
rep who was responsive and helpful. I guess she was sales, but I
used her freely on support issues and she worked the backchannels
for us. Presumably this is what any big/important customer would
get, that's just not you, sorry.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Real Power Is On Demand&lt;/strong&gt;. I'm reaffirming cloud
koolaid here. Running this way lets you build and run systems
differently, &lt;em&gt;much better&lt;/em&gt;. I've relied on the cloud this to bring
up emergency capacity. I've used it to convert a class of machines
on the fly to the double-price double-RAM tier when hitting a
surprising capacity crunch. There are a whole class of problems
that get much easier when you can have 2x the machines for just a
little while.  When someone comes to you with that cost/benefit
spreadsheet arguing why you should self-host, that's when you need
your file of "the cloud saved my bacon" stories at the ready.&lt;/p&gt;&lt;/div&gt;</description><category>Tech</category><guid>http://sef.kloninger.com/posts/aws.html</guid><pubDate>Fri, 24 Apr 2015 07:10:00 GMT</pubDate></item><item><title>In Praise of the Hand Tally</title><link>http://sef.kloninger.com/posts/hand-tally.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/tallies.jpg" alt="Tally Marks" width="height=174"&gt;&lt;/p&gt;
&lt;p&gt;For the past five years I've gathered statistics on how many
trick-or-treaters have come by on Halloween.  If you want to read
about that, check out posts from &lt;a href="http://sef.kloninger.com/posts/201311halloween-2013.html"&gt;last year&lt;/a&gt; or &lt;a href="http://sef.kloninger.com/posts/201210halloween-candy-data.html"&gt;the year before&lt;/a&gt;.
This post is about &lt;strong&gt;how&lt;/strong&gt; I track those stats, and how I don't.&lt;/p&gt;
&lt;p&gt;Every year I'm tempted to build some fancy system to collect and
manage these statistics.  Wouldn't it be fun, say, to wire up some
Raspberry Pi sensor that automatically counts and tweets running
totals?  It wouldn't be &lt;em&gt;that&lt;/em&gt; hard and sounds like fun.&lt;/p&gt;
&lt;p&gt;The problem is making something like that reliable.  You'd have to
do all the un-fun stuff, like testing and contingency planning.  If
your baseline is a clipboard, paper, and a ball point pen, your bar
for failure is basically "never".  Even if I did build something
fancy I'd still end up doing backup tallies by hand.  At this human
scale, the tech ends up being a fun gimmick, not required.&lt;/p&gt;
&lt;p&gt;It reminds me of a story from friend [Tony].  Tony
and his brother &lt;a href="https://twitter.com/ProtomCannon"&gt;Tom&lt;/a&gt; run a giant gaming convention every year,
the &lt;a href="http://evo.shoryuken.com/"&gt;Evolution Championship Series&lt;/a&gt; (Evo for short).  It's a
multi-day convention in Las Vegas that attracts something like ten
thousand participants.  They run the whole thing with their two
other founders and some friends — I'm sure they have some
paid help now, but the four guys are the main ones.  It's impressive.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img src="http://evo.shoryuken.com/wp-content/uploads/2014/02/9450177474_3d2e293e9d_b.jpg" style="padding-top:20px; padding-bottom:20px"&gt;
&lt;/p&gt;

&lt;p&gt;Given that Tony and Tom are strong engineers, I figured this would
be a slick high-tech operation.  Not so.&lt;/p&gt;
&lt;p&gt;Tony said they've tried tech at various points and it wasn't worth
it.  It's easy to see why that is tempting: they have multiple
mobile coordinators that need access to changing, shared information,
like brackets and schedules.  But what they've tried has let them
down.  Usually it's not the hard parts that fail, but the basics,
like batteries and wireless connectivity.  So they still run this
off of printouts and voice communications (cell phones/walkie-talkies)
and periodic data dumps.&lt;/p&gt;
&lt;p&gt;And so, this year I'll be gathering my Halloween stats like I always
have: clipboard, pen, and a hand-held &lt;a href="http://www.amazon.com/STEELMASTER-Counter-Inches-Silver-200100492/dp/B0089KJSFQ/ref=sr_1_3"&gt;tally counter&lt;/a&gt;.  The data
will still be timely and accurate.&lt;/p&gt;
&lt;p&gt;For the curious few, check out my &lt;a href="https://docs.google.com/spreadsheet/ccc?key=0AnpKmkglpRs5dDh3dWRmRlFVaG0yc08xU0lhTzF1NUE"&gt;Halloween Traffic Spreadsheet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Two postscripts.  First, Please stop spreading that
&lt;a href="https://www.youtube.com/watch?v=LQy1DH38E5g"&gt;NASA Space Pen story&lt;/a&gt;.  I'm sure you've heard it: how do you write in zero G?
the wasteful Americans commissioned a multi-million dollar space
pen project; the scrappy can-do Russians used pencils.  Well, this
story has been &lt;a href="http://www.snopes.com/business/genius/spacepen.asp"&gt;debunked by the good people at Snopes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And second, I'd like to plug Tony and Tom's "day job", &lt;a href="http://stonehearth.net/"&gt;Stonehearth&lt;/a&gt;.
I think of it as Starcraft meets Minecraft.  I am so eager to play
it when it lands.&lt;/p&gt;&lt;/div&gt;</description><category>Halloween</category><category>Tech</category><guid>http://sef.kloninger.com/posts/hand-tally.html</guid><pubDate>Thu, 30 Oct 2014 16:20:00 GMT</pubDate></item><item><title>Feedback Without Tips</title><link>http://sef.kloninger.com/posts/tips.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/tip-oneill.jpg" alt="Tip O'Neill" width="30%"&gt;&lt;/p&gt;
&lt;p&gt;I really don't like tipping. I'm not like &lt;a href="https://www.youtube.com/watch?v=Z-qV9wVGb38"&gt;Mr. Pink&lt;/a&gt;. It's
not that I don't want my server or driver to get something extra.
I just don't like the awkward social situation of deciding if this
is a tipping situation, and if so, how much.&lt;/p&gt;
&lt;p&gt;Two services have come up recently where I will happily pay a premium
to not have to fret about too much or too little:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Uber&lt;/strong&gt;. Lots to like about this service but the act of just 
  leaving out of my cab without paying is joyful. I always rate 
  my drivers, good or bad. 98% of the time, it's good by the way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OrderAhead&lt;/strong&gt;. Are you supposed to tip when picking up takeout 
  from a restaurant? I've never known. Neither way feels right, so 
  I usually end up splitting the difference and rounding up to 
  some amount, say leaving a 6% tip, which is the &lt;em&gt;worst&lt;/em&gt; choice. 
  Either that's 6% that wasn't expected, or I'm inadvertently
  shafting someone.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both of these services decouple feedback from money. Both avoid
awkwardly changing money. I'd definitely pay a premium for that.&lt;/p&gt;
&lt;p&gt;I wonder what other service business would benefit from decoupling
feedback from money?&lt;/p&gt;&lt;/div&gt;</description><category>Tech</category><guid>http://sef.kloninger.com/posts/tips.html</guid><pubDate>Tue, 29 Apr 2014 03:07:00 GMT</pubDate></item><item><title>CS Students: Learn to Write</title><link>http://sef.kloninger.com/posts/learn-to-write.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/writing-hand.jpeg" alt="Writing Hand" width="40%"&gt;&lt;/p&gt;
&lt;p&gt;If I could do my college years over I would focus on writing. I
would take courses that required a lot of writing, in the spirit
of "learn by doing". I'd also take courses in the mechanics and
craft: grammar, vocabulary, and rhetoric.&lt;/p&gt;
&lt;p&gt;I used to consider myself a competent writer. And certainly good
enough for an engineer, right? But I've learned that I have a long
way to go. I've learned that engineers spend much more time writing
than you expect. And I appreciate how hard it is to write well.&lt;/p&gt;
&lt;p&gt;This came up just this past week. I came across a beautiful four
page essay. It laid out the problem, described alternatives, and
lead you concisely to a well-reasoned conclusion. Sure, it was about
technology, but what carried the day was the good writing. Humbling!&lt;/p&gt;
&lt;p&gt;You're saying: but wait, you're a &lt;a href="http://en.wikipedia.org/wiki/Pointy-Haired_Boss"&gt;pointy-haired boss&lt;/a&gt; now
Sef, one of those guys who doesn't do &lt;em&gt;Real Work&lt;/em&gt; anymore. You write
email and boss people around. I understand why managers like you
need to write, I'm an engineer. I write code. Well, there's some
truth to that. But I'd like to convince you that even monster coders,
if they're any good, write a lot, write well, and value good writing
in others.&lt;/p&gt;
&lt;p&gt;It is rare for someone to do their work in isolation and have it
matter. Either you're working as part of a team, in a company or
a community of developers, say on an open-source project. Sure, you
build a great system or feature. But to have it matter to the world,
for others to adopt it, you need to document, publicize, support,
teach. 98% of that is writing.&lt;/p&gt;
&lt;p&gt;I had a lunchtime conversation with &lt;a href="http://jacobian.org/writing/great-documentation/"&gt;Jacob Kaplan-Moss&lt;/a&gt;,
Django's co-founder, at last year's PyCon. I asked him why Django
caught on and was adopted by so many of us (including &lt;a href="http://class2go.stanford.edu/"&gt;my last
project&lt;/a&gt; and &lt;a href="http://code.edx.org/"&gt;my current project&lt;/a&gt;). I was expecting him
to point to features or timing. Instead he said it was "because we
wrote good docs". The Django team didn't treat documentation as an
afterthought. They have lots of docs, and they are good.&lt;/p&gt;
&lt;p&gt;Consider that rare bird, the iconoclastic engineer working in
isolation on their own project. I'm thinking of &lt;a href="http://antirez.com/"&gt;Antirez&lt;/a&gt; or
&lt;a href="http://www.marco.org/"&gt;Marco&lt;/a&gt;. (Maybe they aren't even truly on their own so much.
Humor me!) They are prolific and strong coders. But they also write
a lot of words! They write a ton about their project; also tech
landscape and their place in it. Would their software have as much
of an impact if they didn't write so much (and well)? I say no.&lt;/p&gt;
&lt;p&gt;Case in point. Both Marco and I wrote blog posts riffing off the
same topic two weeks ago. First, read &lt;a href="http://sef.kloninger.com/posts/consume-produce-public.html"&gt;mine&lt;/a&gt;, then
&lt;a href="http://www.marco.org/2014/01/03/the-builders-high"&gt;his&lt;/a&gt;.  It takes me a ton of words to get something
basic out.  His is concise and clear. Sheesh.&lt;/p&gt;
&lt;p&gt;So kids, don't shortchange those liberal arts classes. It's not
fluffy stuff on the side. &lt;strong&gt;That is core&lt;/strong&gt;. You need to write well
to be a good engineer.&lt;/p&gt;
&lt;p&gt;Protip: the best way to do this is to major in the humanities. They
write like crazy over there. Be like my friend Dan Chu and major
in history, but secretly take CS courses on the side. If you're
super smart like him, and can manage getting both degrees, then
you're awesome. But don't sacrifice the BA for the BS. I would
&lt;strong&gt;love&lt;/strong&gt; to talk to a candidate with with a History BA and a Computer
Science MS.&lt;/p&gt;&lt;/div&gt;</description><category>Tech</category><guid>http://sef.kloninger.com/posts/learn-to-write.html</guid><pubDate>Sun, 26 Jan 2014 00:17:00 GMT</pubDate></item><item><title>Switching to Static</title><link>http://sef.kloninger.com/posts/switching-to-static.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img style="float:right" class="postimage" src="http://sef.kloninger.com/f/tesla.jpg" alt="Nikola Tesla" width="195" height="228"&gt;&lt;/p&gt;
&lt;p&gt;For those of you who frequently read this blog (n ≈ 0) you'll
notice that it looks a bit different. I've moved it from my own
hosted Wordpress instance to static pages generated by &lt;a href="http://www.getnikola.com/"&gt;Nikola&lt;/a&gt;
and hosted up on &lt;a href="http://www.github.com/"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Why bother?  I didn't like my blog being something I wouldn't be
proud to write or operate myself.  Wordpress was overkill and
not worth the trouble:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wordpress is database driven for dynamic sites. My little blog isn't
  dynamic at all. Once you buy into the static idea, lots of otehr
  things fall into place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comments and account spam are still is a nuisance. The nice
  people at &lt;a href="http://akismet.com/"&gt;Akismet&lt;/a&gt; have done a great job holding back the tide, 
  but I still get at least one bogus registration a day. I expect a 
  service like Disqus or Facebook or Google+ will be more likely
  to keep pace with the spammers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I want to author in markdown; maybe even ReST someday. All this
  wysiwyg-ish stuff in browsers is for the birds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I don't actually need to host anything. I'm not running my own IRC
  server or anything. Even though &lt;a href="http://dreamhost.com/"&gt;Dreamhost&lt;/a&gt; has been a perfectly
  good service, I just want something... well, less Wordpress-ey.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Choosing&lt;/h3&gt;
&lt;p&gt;So I need to pick a static web site hosting package, specifically
one that is good for blogs.  The big things I was looking for:
static site generation, Markdown/ReST support, and ability
to host on free services like Github Pages.&lt;/p&gt;
&lt;p&gt;In additon I wanted these things (in no particular order):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;active development&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in real use on real sites&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;easy customization, ideally by theming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ability to move over posts and comments, probably via Wordpress's
  export function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python, what I program in for fun&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a bit extensible&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I considered three options before settling on Nikola.  There are a
ton of static site generators, even when you limit them to Python.
But the only alternatives I seriously looked at were &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; and
&lt;a href="http://ringce.com/hyde"&gt;Hyde&lt;/a&gt;.  Of these Nikola seems to have the most active development
and the richest set of features.  I ease especially drawn by their
good documentation and theming.&lt;/p&gt;
&lt;h3&gt;Up and Running&lt;/h3&gt;
&lt;p&gt;Here are my notes of what it took.  This isn't a nicely-written howto,
but if you want to see the blow-by-blow, read on.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The software was easy to set up and get started&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pip install nikola&lt;/code&gt; did the right thing.  Of course
  within a virtual environment, you have to keep the lab clean!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Along the way I found a few other requirements, like request,
  phpserialize, and markdown. These were easy to find/fix because of
  helpful error messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is all now captured in the project's &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial import from wordpress XML dump went &lt;em&gt;ok&lt;/em&gt; but a fair bit of
   manual HTML prettification took some time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The slugs aren't how I like them: &lt;code&gt;201311seven-things.wp&lt;/code&gt; 
  instead of &lt;code&gt;seven-things.wp&lt;/code&gt;.  I tried a bit to do mass
  rewrite of those, but couldn't easily do that without breaking
  everything, so just decided to let this go for now.  I'll just do
  slugs without dates going forward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I considered &lt;a href="http://www.aaronsw.com/2002/html2text/"&gt;html2text&lt;/a&gt; but figured I'd just let the HTML 
  slide for now. Too much trouble to go back and clean all that
  up now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The "wp" extension, by default, is mapped to markdown instead of
  html.  Odd but easy to change.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nikola has a nice simple redirect facility that the importer
  pre-populated for me.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Migrate threads to &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt; - clean and simple,
   worked right out of the box.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;wordpress plugin has a nice import facility.  Said it'd take a
  day, but didn't take that long at all.  Aside from one thread with 
  75 comments, not much else that should cause them much heartache.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nice simple URL mapping utility&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Publishing to github. Again, easy peasy. The way to make this work
   is to put all your static files in a repo titled
   &lt;code&gt;USERNAME.github.io&lt;/code&gt;.  In my case: 
   &lt;code&gt;&lt;a href="https://github.com/sefk/sefk.github.io"&gt;sefk.github.io&lt;/a&gt;&lt;/code&gt;.  Just 
   a couple of "tricks" were needed to make this work smoothly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;So that it would correctly serve my own domain, you have to put a
     CNAME file in the root of the repo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I put my nikola themes and source files in the "src" subdirectory,
     and changed the &lt;code&gt;OUTPUT_DIR&lt;/code&gt; configuration option to
     &lt;code&gt;..&lt;/code&gt;.  Github Pages wants things in the root.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The final swich.  I moved my domain from Dreamhost over to
   &lt;a href="http://gandi.fr/"&gt;Gandi&lt;/a&gt;, which is the registrar I like to use.  They throw in
   basic DNS with registration, which is sufficient for me.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;So There You Have It&lt;/h3&gt;
&lt;p&gt;So far I am really pleased with the result. It's a bit more work to
publish, but for me that's natural and what I want. I guess I wouldn't
recommend this to someone who isn't adept with all these bits (virtual
environments, DNS, github repos, etc.) but for me that's no problem.&lt;/p&gt;
&lt;p&gt;Thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Using livereload with Nikola makes for a very nice workflow. Check
  out &lt;a href="http://serialized.net/2013/04/nikola-and-livereload-ftw/"&gt;this blog post&lt;/a&gt; that describes how. Very helpful post,
  thanks to Joshua Barratt for sharing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This &lt;a href="http://kushaldas.in/posts/importing-your-wordpress-blog-to-nikola.html#uploading-your-blog-site-as-github-pages"&gt;helpful post by Kaushal Das&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>Tech</category><guid>http://sef.kloninger.com/posts/switching-to-static.html</guid><pubDate>Mon, 30 Dec 2013 09:35:23 GMT</pubDate></item><item><title>Airmail FTW</title><link>http://sef.kloninger.com/posts/201312airmail.html</link><dc:creator>Sef Kloninger</dc:creator><description>&lt;img class="alignright  wp-image-454" style="border: 0px;" alt="airmail" src="http://sef.kloninger.com/f/airmail.png" width="179" height="179"&gt;Finally a thick-client email program that seems to have stuck. So far I am really liking &lt;a href="http://airmailapp.com/"&gt;Airmail&lt;/a&gt;.

&lt;p&gt;
For years I've flipped between various Mac fat clients and the GMail web interface. The web interface keeps winning:

&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;Outstanding search&lt;/li&gt;
	&lt;li&gt;Great keyboard shortcuts (go Vi!)&lt;/li&gt;
	&lt;li&gt;Very good use of screen real estate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
But the killer is the reliance on a rock-solid Internet connection, and GMail's own slowdowns. Even though there is an offline mode, it is such a downgrade it's not worth using. So if you need to use offline you're in bad shape; same if you're on a slow or lossy connection, or if GMail is having a bad day.  Sadly, that's pretty often these days.



&lt;/p&gt;&lt;p&gt;
Airmail is cheap (&lt;a href="https://itunes.apple.com/us/app/airmail/id573171375?mt=12"&gt;$1.99 in the App Store&lt;/a&gt;) and super featureful. It coexists well with GMail's paradigm (archive vs. delete, threading includes sent items, drafts). Great configuration options. Visually pleasing. Robust.



&lt;/p&gt;&lt;p&gt;
There are really only three places where it has fallen short for me:

&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;ul&gt;
	&lt;li&gt;I miss GMail's tabs. Those are still the best way to filter mail, and I was impressed with how well that feature worked and quickly became natural.&lt;/li&gt;
	&lt;li&gt;Search. Airmail's isn't bad, but nothing is as good at this as Google's own.&lt;/li&gt;
	&lt;li&gt;Gmail (with Chrome) has a great feature where you can drop in a picture and it is resized to look good.  Lacking that I now have to manually resize my giant retina-display screenshots.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
So-long to &lt;a href="http://sparrowmailapp.com/"&gt;Sparrow&lt;/a&gt; and &lt;a href="http://www.apple.com/osx/apps/#mail"&gt;Mail.app&lt;/a&gt; and &lt;a href="http://mailplaneapp.com/"&gt;Mailplane&lt;/a&gt;. Or until someone does really nails &lt;a href="https://www.mailpile.is/"&gt;self-hosting&lt;/a&gt;.&lt;/p&gt;</description><category>Tech</category><guid>http://sef.kloninger.com/posts/201312airmail.html</guid><pubDate>Tue, 03 Dec 2013 04:10:50 GMT</pubDate></item></channel></rss>